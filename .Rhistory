knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat$origin_cluster <- ifelse(dat$n_cluster < 200, "Others", as.character(dat$Cluster))
names(edges) <- c("Source", "Target")
View(dat)
dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
ggplot(secondary, aes(secondary$`Secondary infections`)) + geom_histogram()
secondary %>% filter(P >0) %>% ggplot(aes(secondary$`Secondary infections`)) + geom_histogram()
secondary %>% filter(P > 0) %>% ggplot(aes(secondary$`Secondary infections`)) + geom_histogram()
secondary %>% filter(P > 0) %>% ggplot(aes(`Secondary infections`)) + geom_histogram()
secondary %>% filter(`Secondary infections` > 30) %>% ggplot(aes(`Secondary infections`)) + geom_histogram()
secondary %>% filter(`Secondary infections` < 30) %>% ggplot(aes(`Secondary infections`)) + geom_histogram()
View(secondary)
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram()
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + theme_classic()
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(xintercept = 3.075967) + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(xintercept = 3.075967, color = "red") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(xintercept = 3.075967, color = "Red") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(xintercept = 3.075967, color = "Red", linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(color = "ew"), xintercept = 3.075967, color = "Red", linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "ew"), , color = "Red", linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "ew"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Average number of secondary infections"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Avg  secondary infections"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Avgsecondary infections"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Avg secondary infections"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
View(secondary)
dat %>% ggplot(aes(Date)) + geom_bar(aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
ggsave("clusters.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat$origin_cluster <- ifelse(dat$n_cluster < 200, "Others", as.character(dat$Cluster))
dat %>% ggplot(aes(Date)) + geom_bar(aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
ggsave("clusters.png")
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
View(secondary)
View(dat)
dat %>% group_by(Cluster) %>% summarize(n_cluster = n())
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
ggsave("clusters.png")
june30_parent <- secondary %>% filter(P <= 15242)
View(june30_parent)
secondary %>% summarise(mean = mean(`Secondary infections`))
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
june30_parent <- secondary %>% filter(P <= 15242 & P != 0)
secondary %>% summarise(mean = mean(`Secondary infections`))
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
june30_parent <- secondary %>% filter(P <= 15242 & P != 0)
june30_parent %>% summarise(mean = mean(`Secondary infections`))
june30_parent <- secondary %>% filter(P <= 11005 & P != 0)
june30_parent %>% summarise(mean = mean(`Secondary infections`))
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
june26_parent <- secondary %>% filter(P <= 11005 & P != 0)
june26_parent %>% summarise(mean = mean(`Secondary infections`))
View(june26_parent)
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
View(secondary)
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat$origin_cluster <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$Cluster))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat$origin_cluster <- ifelse(dat$n_cluster < 50, "Others", as.character(dat$Cluster))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom")  + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
100
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="BBrG") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n())
dat$origin_1 <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$Cluster))
dat$origin_2 <- ifelse(dat$n_cluster < 200, "Others", as.character(dat$Cluster))
?ggbrewer
?scale_fill_brewer
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlGnBu") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="PuBuGn") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlOrRd") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, width = 0.8) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlOrRd") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, line = 0.8) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlOrRd") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "0.8"black) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlOrRd") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black") + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlOrRd") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", width = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlOrRd") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlOrRd") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlGnBu") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlGnBu", direction = -1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat$origin_1 <- ifelse(dat$n_cluster < 50, "Others", as.character(dat$Cluster))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlGnBu", direction = -1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat$origin_1 <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$Cluster))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlGnBu", direction = -1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlGnBu", direction = -1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n())
dat$origin_1 <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$Cluster))
dat$origin_2 <- ifelse(dat$n_cluster < 200, "Others", as.character(dat$Cluster))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlGnBu", direction = -1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
ggsave("clusters_pct.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_y_log10()+scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") +scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_y_log10(labels = scales::comma)+scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + +scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + +scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases"ggsave("clusters_pct.png")
)
ggsave("clusters_pct.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + +scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlGnBu", direction = -1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases")
ggsave("clusters_stacked.png")
dat %>% filter(Date < "2020-05-31") %>% Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Date < "2020-05-31" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Date < "2020-05-31") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Date < "2020-06-30") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
5
dat %>% filter(Date < "2020-05-31") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Date < "2020-05-31") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_1), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="YlGnBu", direction = -1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = -1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = -1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
write_csv(full, "states_final.csv")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
raw <- read_csv("https://api.covid19india.org/csv/latest/state_wise_daily.csv")
raw$Date <- as.Date(raw$Date, "%d-%b-%y")
cases <- raw %>% filter(Status == "Confirmed") %>% select(-UN, -TT, -LD, -DD)
column <- cases %>% select(-Status)
row <- cases %>% pivot_longer(c(3:length(cases)), names_to = "State", values_to = "Daily cases") %>% select(-Status)
row <- row %>% group_by(State) %>% mutate(`Daily cases, seven day moving average` = (lag(`Daily cases`, 3) + lag(`Daily cases`, 2) + lag(`Daily cases`, 1) + `Daily cases` + lead(`Daily cases`, 1) + lead(`Daily cases`, 2) + lead(`Daily cases`, 3))/7)
write_csv(row, "row_state.csv")
row %>% filter(Date >= "2020-04-01") %>% ggplot(aes(x = Date, y = `Daily cases, seven day moving average`)) + geom_area(alpha = 0.5, fill = "#428af5", color = "#074163", size = 0.2) + facet_wrap(~State, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank())
classification <- row %>% filter(Date == "2020-07-11" | Date == "2020-06-27") %>% arrange(State, Date) %>% group_by(State) %>% mutate(diff = `Daily cases, seven day moving average` - lag(`Daily cases, seven day moving average`), pct = 100*diff / `Daily cases, seven day moving average`)
state_names <- read_csv("state_names.csv")
full <- full_join(row,state_names)
write_csv(full, "states_final.csv")
label <- full %>% filter(Date == "2020-07-14")
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0, ) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("rising.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("stable_falling.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
text
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
?geom_label()
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = 0, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = 10, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`/2, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`*1.2, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = max(`Daily cases, seven day moving average`)-10, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`*1.2, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`*1.3, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 9), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full <- full %>% arrange(State, Date)
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0, ) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("rising.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 9), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("stable_falling.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repell(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 9), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 9), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.2) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.2) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 01) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.padding = 0.1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = Na) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full <- full %>% arrange(State, Date)
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("rising.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.1, label.size = NA) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("stable_falling.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.5) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.9) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.9) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full <- full %>% arrange(State, Date)
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.9) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("rising.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.9) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("stable_falling.png")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
daily <- dat %>% group_by(Date) %>% summarize(Cases = n())
write_csv(daily, "daily_cases.csv")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n())
dat$origin_1 <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$Cluster))
dat$origin_2 <- ifelse(dat$n_cluster < 200, "Others", as.character(dat$Cluster))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat %>% filter(Date < "2020-05-31") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_1), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
june26_parent <- secondary %>% filter(P <= 11005 & P != 0)
june26_parent %>% summarise(mean = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
names(edges) <- c("Source", "Target")
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
dat$origin_2 <- ifelse(dat$n_cluster < 300, "Others", as.character(dat$Cluster))
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat$origin_2 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$Cluster))
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
dat$origin <- dat$Cluster
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat$origin <- dat$Cluster
dat$origin <- ifelse(dat$origin < 100, "Others", ifelse(dat$origin == "Influenza like illness", "ILI", ifelse(dat$origin == "Severe Acute Respiratory Infection", "SARI", as.character(dat$Cluster))))
dat$origin_1 <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$Cluster))
dat$origin_2 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$Cluster))
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat$origin <- dat$Cluster
dat$origin <- ifelse(dat$origin < 100, "Others", ifelse(dat$origin == "Influenza like illness", "ILI", ifelse(dat$origin == "Severe Acute Respiratory Infection", "SARI", as.character(dat$Cluster))))
dat$origin_1 <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$origin))
dat$origin_2 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$origin))
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat$origin <- dat$Cluster
dat$origin <- ifelse(dat$origin < 100, "Others", ifelse(dat$origin == "Influenza like illness", "ILI", ifelse(dat$origin == "Severe Acute Respiratory Infection", "SARI", as.character(dat$Cluster))))
dat$origin_1 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$origin))
dat$origin_2 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$origin))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
View(secondary)
View(daily)
View(june26_parent)
View(dat)
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
#Out of thee 23,474 people tested positive with COVID-19 by July 5, only 1622 or
1622/23474
#Out of thee 23,474 people tested positive with COVID-19 by July 5, only 1622 or
1622/23474*100
july5_parent %>% summarise(mean = mean(`Secondary infections`))
23474-1622
View(secondary)
View(daily)
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
july5_dat <- dat %>% filter(Cluster != "Unknown" & Date <= "2020-07-05")
july5_dat <- dat %>% filter(Date <= "2020-07-05")
july5_known <- july5_dat %>% filter(Cluster != "Unknown")
paste("Of the ", length(july5_known))
paste("Of the ", nrow(july5_known), " cases confirmed in Karnataka by July 5 ", nrow(july5_known), " have a known contact history.")
paste("Of the", nrow(july5_known), "cases confirmed in Karnataka by July 5 ", nrow(july5_known), " have a known contact history.")
paste("Of the", nrow(july5_known), "COVID-19 cases confirmed in Karnataka by July 5", nrow(july5_known), "have a known contact history.")
paste("Of the", nrow(july5_dat), "COVID-19 cases confirmed in Karnataka by July 5,", nrow(july5_known), "or", 100*nrow(july5_known)/nrow(july5_dat),"have a known contact history.")
secondary <- dat %>% filter(cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Number of people with no contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Percentage of people with known contacts who caused secondary infections
nrow(july5_parent)/nrow(july5_known)*100
# Number of people with no contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Number of people with known contacts who caused secondary infections in others with known contacts
nrow(july5_parent)
# Percentage of people with known contacts who caused secondary infections
nrow(july5_parent)/nrow(july5_known)*100
# Number of people with known contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
100*(nrow(july5_known)-nrow(july5_parent))/nrow(july5_known)
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Number of people with known contacts who caused secondary infections in others with known contacts
nrow(july5_parent)
# Percentage of people with known contacts who caused secondary infections
nrow(july5_parent)/nrow(july5_known)*100
# Number of people with known contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
100*(nrow(july5_known)-nrow(july5_parent))/nrow(july5_known)
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
mean_infections <- july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Number of people with known contacts who caused secondary infections in others with known contacts
nrow(july5_parent)
# Percentage of people with known contacts who caused secondary infections
nrow(july5_parent)/nrow(july5_known)*100
# Number of people with known contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
100*(nrow(july5_known)-nrow(july5_parent))/nrow(july5_known)
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
mean_infections <- as.numeric(july5_parent %>% summarise(mean = mean(`Secondary infections`)))
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("No. of COVID-19 patients that cause a secondary infection") + ggtitle("Distribution of number of  infections caused")
secondary %>% filter(P <= 23474)
dat %>% filter(P <= 23474) %>% group_by(P) %>% summarize(`Secondary infections` = n())
dat %>% filter(P <= 23474)
dat %>% filter(Case <= 23474) %>% group_by(P) %>% summarize(`Secondary infections` = n())
dat %>% filter(Date >= "2020-07-01") %>% group_by(Cluster) %>% summarize(number = n())
dat %>% filter(Date >= "2020-07-01") %>% group_by(Cluster) %>% summarize(number = n()) %>% arrange(-number)
dat %>% filter(Date >= "2020-07-01") %>% summarize(number = n())
dat %>% filter(Date >= "2020-07-01") %>% summarize(number = n())
dat %>% filter(Date >= "2020-07-01") %>% group_by(Cluster) %>% summarize(number = n()) %>% arrange(-number)
dat %>% filter(Date >= "2020-07-01") %>% ungroup() %>% summarize(number = n())
dat %>% filter(Date >= "2020-07-01")
dat %>% filter(Date >= "2020-07-01") %>% group_by(Cluster) %>% summarize(number = n()) %>% arrange(-number)
