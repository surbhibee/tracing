knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat$origin_cluster <- ifelse(dat$n_cluster < 200, "Others", as.character(dat$Cluster))
names(edges) <- c("Source", "Target")
View(dat)
dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
ggplot(secondary, aes(secondary$`Secondary infections`)) + geom_histogram()
secondary %>% filter(P >0) %>% ggplot(aes(secondary$`Secondary infections`)) + geom_histogram()
secondary %>% filter(P > 0) %>% ggplot(aes(secondary$`Secondary infections`)) + geom_histogram()
secondary %>% filter(P > 0) %>% ggplot(aes(`Secondary infections`)) + geom_histogram()
secondary %>% filter(`Secondary infections` > 30) %>% ggplot(aes(`Secondary infections`)) + geom_histogram()
secondary %>% filter(`Secondary infections` < 30) %>% ggplot(aes(`Secondary infections`)) + geom_histogram()
View(secondary)
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram()
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + theme_classic()
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(xintercept = 3.075967) + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(xintercept = 3.075967, color = "red") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(xintercept = 3.075967, color = "Red") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(xintercept = 3.075967, color = "Red", linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(color = "ew"), xintercept = 3.075967, color = "Red", linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "ew"), , color = "Red", linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "ew"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Average number of secondary infections"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Avg  secondary infections"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Avgsecondary infections"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Avg secondary infections"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Secondary infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of secondary infections caused")
ggsave("secondary_hist.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
View(secondary)
dat %>% ggplot(aes(Date)) + geom_bar(aes(fill=origin_cluster), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
ggsave("clusters.png")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
