full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = 0, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = 10, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`/2, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`*1.2, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = max(`Daily cases, seven day moving average`)-10, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`*1.2, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`*1.3, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 9), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full <- full %>% arrange(State, Date)
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0, ) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("rising.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 9), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("stable_falling.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repell(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 9), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 9), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 4) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.2) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_text_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.2) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 01) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.padding = 0.1) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = Na) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full <- full %>% arrange(State, Date)
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("rising.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 3, segment.size = 0.1, label.size = NA) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("stable_falling.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.5) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.9) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.9) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
full <- full %>% arrange(State, Date)
full %>% filter(Date >= "2020-04-01" & Status == "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.4, fill = "#9c261e", color = "#3b0805", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.9) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("rising.png")
full %>% filter(Date >= "2020-04-01" & Status != "Rising") %>% ggplot() + geom_area(aes(x = Date, y = `Daily cases, seven day moving average`), alpha = 0.5, fill = "#63b877", color = "#053b12", size = 0.2) + geom_label_repel(aes(x = Date, y = `Daily cases, seven day moving average`, label = ifelse(Date == "2020-07-04", lead(`Daily cases`, 10), "")), size = 2, segment.size = 0.1, label.size = NA, alpha = 0.9) + facet_wrap(~`State name`, scales = "free") + theme_minimal() + theme(axis.text =  element_blank(), panel.grid =  element_blank(), axis.title.x = element_blank(), strip.text = element_text(size = 8))
ggsave("stable_falling.png")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
daily <- dat %>% group_by(Date) %>% summarize(Cases = n())
write_csv(daily, "daily_cases.csv")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n())
dat$origin_1 <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$Cluster))
dat$origin_2 <- ifelse(dat$n_cluster < 200, "Others", as.character(dat$Cluster))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat %>% filter(Date < "2020-05-31") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_1), alpha = 0.7) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2") + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases")
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
june26_parent <- secondary %>% filter(P <= 11005 & P != 0)
june26_parent %>% summarise(mean = mean(`Secondary infections`))
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
names(edges) <- c("Source", "Target")
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
dat$origin_2 <- ifelse(dat$n_cluster < 300, "Others", as.character(dat$Cluster))
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat$origin_2 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$Cluster))
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
dat$origin <- dat$Cluster
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat$origin <- dat$Cluster
dat$origin <- ifelse(dat$origin < 100, "Others", ifelse(dat$origin == "Influenza like illness", "ILI", ifelse(dat$origin == "Severe Acute Respiratory Infection", "SARI", as.character(dat$Cluster))))
dat$origin_1 <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$Cluster))
dat$origin_2 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$Cluster))
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat$origin <- dat$Cluster
dat$origin <- ifelse(dat$origin < 100, "Others", ifelse(dat$origin == "Influenza like illness", "ILI", ifelse(dat$origin == "Severe Acute Respiratory Infection", "SARI", as.character(dat$Cluster))))
dat$origin_1 <- ifelse(dat$n_cluster < 100, "Others", as.character(dat$origin))
dat$origin_2 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$origin))
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat %>% filter(Date > "2020-04-01" & Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar( aes(fill=origin_2), alpha = 0.7) + theme_light() + theme(legend.position="bottom")+ scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Number of cases confirmed daily")
ggsave("clusters_pct.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n())
dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster)
dat$origin <- dat$Cluster
dat$origin <- ifelse(dat$origin < 100, "Others", ifelse(dat$origin == "Influenza like illness", "ILI", ifelse(dat$origin == "Severe Acute Respiratory Infection", "SARI", as.character(dat$Cluster))))
dat$origin_1 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$origin))
dat$origin_2 <- ifelse(dat$n_cluster < 1000, "Others", as.character(dat$origin))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin_1), alpha = 0.7, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom") + scale_fill_brewer(palette="Dark2", direction = 1) + ggtitle("Distribution of cases diagnosed from various clusters over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
View(secondary)
View(daily)
View(june26_parent)
View(dat)
secondary <- dat %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
#Out of thee 23,474 people tested positive with COVID-19 by July 5, only 1622 or
1622/23474
#Out of thee 23,474 people tested positive with COVID-19 by July 5, only 1622 or
1622/23474*100
july5_parent %>% summarise(mean = mean(`Secondary infections`))
23474-1622
View(secondary)
View(daily)
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
july5_dat <- dat %>% filter(Cluster != "Unknown" & Date <= "2020-07-05")
july5_dat <- dat %>% filter(Date <= "2020-07-05")
july5_known <- july5_dat %>% filter(Cluster != "Unknown")
paste("Of the ", length(july5_known))
paste("Of the ", nrow(july5_known), " cases confirmed in Karnataka by July 5 ", nrow(july5_known), " have a known contact history.")
paste("Of the", nrow(july5_known), "cases confirmed in Karnataka by July 5 ", nrow(july5_known), " have a known contact history.")
paste("Of the", nrow(july5_known), "COVID-19 cases confirmed in Karnataka by July 5", nrow(july5_known), "have a known contact history.")
paste("Of the", nrow(july5_dat), "COVID-19 cases confirmed in Karnataka by July 5,", nrow(july5_known), "or", 100*nrow(july5_known)/nrow(july5_dat),"have a known contact history.")
secondary <- dat %>% filter(cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Number of people with no contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Percentage of people with known contacts who caused secondary infections
nrow(july5_parent)/nrow(july5_known)*100
# Number of people with no contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Number of people with known contacts who caused secondary infections in others with known contacts
nrow(july5_parent)
# Percentage of people with known contacts who caused secondary infections
nrow(july5_parent)/nrow(july5_known)*100
# Number of people with known contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
100*(nrow(july5_known)-nrow(july5_parent))/nrow(july5_known)
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Number of people with known contacts who caused secondary infections in others with known contacts
nrow(july5_parent)
# Percentage of people with known contacts who caused secondary infections
nrow(july5_parent)/nrow(july5_known)*100
# Number of people with known contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
100*(nrow(july5_known)-nrow(july5_parent))/nrow(july5_known)
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = 3.075967, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
secondary <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(`Secondary infections` = n())
write_csv(secondary, "secondary_infections.csv")
july5_parent <- secondary %>% filter(P <= 23474 & P != 0)
mean_infections <- july5_parent %>% summarise(mean = mean(`Secondary infections`))
# Number of people with known contacts who caused secondary infections in others with known contacts
nrow(july5_parent)
# Percentage of people with known contacts who caused secondary infections
nrow(july5_parent)/nrow(july5_known)*100
# Number of people with known contacts who caused no secondary infections
nrow(july5_known)-nrow(july5_parent)
100*(nrow(july5_known)-nrow(july5_parent))/nrow(july5_known)
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
mean_infections <- as.numeric(july5_parent %>% summarise(mean = mean(`Secondary infections`)))
secondary %>% filter(`Secondary infections` < 100) %>% summarize(avg = mean(`Secondary infections`), med = median(`Secondary infections`))
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("Number of COVID-19 patients") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
june26_parent %>% filter(`Secondary infections` < 100) %>% ggplot(aes(`Secondary infections`)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("No. of COVID-19 patients that cause a secondary infection") + ggtitle("Distribution of number of  infections caused")
secondary %>% filter(P <= 23474)
dat %>% filter(P <= 23474) %>% group_by(P) %>% summarize(`Secondary infections` = n())
dat %>% filter(P <= 23474)
dat %>% filter(Case <= 23474) %>% group_by(P) %>% summarize(`Secondary infections` = n())
dat %>% filter(Date >= "2020-07-01") %>% group_by(Cluster) %>% summarize(number = n())
dat %>% filter(Date >= "2020-07-01") %>% group_by(Cluster) %>% summarize(number = n()) %>% arrange(-number)
dat %>% filter(Date >= "2020-07-01") %>% summarize(number = n())
dat %>% filter(Date >= "2020-07-01") %>% summarize(number = n())
dat %>% filter(Date >= "2020-07-01") %>% group_by(Cluster) %>% summarize(number = n()) %>% arrange(-number)
dat %>% filter(Date >= "2020-07-01") %>% ungroup() %>% summarize(number = n())
dat %>% filter(Date >= "2020-07-01")
dat %>% filter(Date >= "2020-07-01") %>% group_by(Cluster) %>% summarize(number = n()) %>% arrange(-number)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
## Number of daily cases
daily <- dat %>% group_by(Date) %>% summarize(Cases = n())
write_csv(daily, "daily_cases.csv")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n()) #Variable for number of cases in each cluster
cases_per_cluster <- dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster) #Table for number of cases in each cluster
dat$origin <- ifelse(dat$n_cluster < 20, "Others", ifelse(dat$Cluster == "Influenza like illness", "ILI", ifelse(dat$Cluster == "Severe Acute Respiratory Infection", "SARI", ifelse(dat$Cluster == "Influenza like illness", "ILI", as.character(dat$Cluster)))) #Creating a cleaned up variable with information from `Clusters' for diagramming
View(cases_per_cluster)
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n()) #Variable for number of cases in each cluster
cases_per_cluster <- dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster) #Table for number of cases in each cluster
dat$origin <- ifelse(dat$n_cluster < 20, "Others", ifelse(dat$Cluster == "Influenza like illness", "ILI", ifelse(dat$Cluster == "Severe Acute Respiratory Infection", "SARI", ifelse(dat$Cluster == "TJ Congregation from 13th to 18th March in Delhi	9", "TJ Congregation", ifelse(dat$Cluster == "Pharmaceutical Company in Nanjangud", "Pharma Co, Nanjangud", as.character(dat$Cluster)))))) #Creating a cleaned up variable with information from `Clusters' for diagramming
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
## Number of daily cases
daily <- dat %>% group_by(Date) %>% summarize(Cases = n())
write_csv(daily, "daily_cases.csv")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n()) #Variable for number of cases in each cluster
cases_per_cluster <- dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster) #Table for number of cases in each cluster
dat$origin <- ifelse(dat$n_cluster < 20, "Others", ifelse(dat$Cluster == "Influenza like illness", "ILI", ifelse(dat$Cluster == "Severe Acute Respiratory Infection", "SARI", ifelse(dat$Cluster == "TJ Congregation from 13th to 18th March in Delhi	9", "TJ Congregation", ifelse(dat$Cluster == "Pharmaceutical Company in Nanjangud", "Pharma Co, Nanjangud", as.character(dat$Cluster)))))) #Creating a cleaned up variable with information from `Clusters' for diagramming
july7_parent_c <- dat %>% filter(Case <= 26815 & C == 1) # Collapsing C variable
nrow(july7_parent_c)
july7_parent_p <- dat %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P <= 26815 & P != 0) # Collapsing P variable
nrow(july7_parent_p)
setdiff(july7_parent_c$Case, july7_parent_p$P)
setdiff(july7_parent_p$P, july7_parent_c$Case)
temp <- dat %>% ungroup() %>% select(Case, Date)
names(temp) <- c("P", "Date confirmed")
parents <- dat %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P != 0)
secondary <- left_join(parents, temp)
write_csv(secondary, "secondary_infections.csv")
paste(nrow(july7_parent_p), "cases diagnosed and contact traced till July 7 caused secondary infections by July 21, 2020")
sum(july7_parent_p$secondary)
july21_traced <- dat %>% filter(Cluster != "Unknown" | !is.na(Reason) | C != 0 | P != 0)
paste(nrow(july21_traced), "out of", nrow(dat), "cases were contact traced till July 21")
temp <- july21_traced %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P <= 26815 & P != 0) # Collapsing P variable
nrow(temp) #seems right
july7_traced <- july21_traced %>% filter(Case <= 26815) # Number of cases confirmed and traced by July 7
nrow(july7_traced)-nrow(july7_parent_p) # Number of cases confirmed and traced by July 7 that did not cause other infections
paste("Of the", nrow(july7_traced), "cases that were confirmed by July 7 and contact traced", nrow(july7_parent_p), "caused secondary infections, while", nrow(july7_traced)-nrow(july7_parent_p), "did not cause any secondary infections at all")
mean_infections <- as.numeric(july7_parent_p %>% summarise(mean = mean(secondary)))
july7_parent_p %>% summarize(avg = mean(secondary), med = median(secondary))
july7_parent_p %>% ggplot(aes(secondary)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("No. of COVID-19 patients that cause a secondary infection") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
View(dat)
dat$origin <- ifelse(dat$n_cluster < 20, "Others", ifelse(dat$Cluster == "Influenza like illness", "ILI", ifelse(dat$Cluster == "Severe Acute Respiratory Infection", "SARI", ifelse(dat$Cluster == "TJ Congregation from 13th to 18th March in Delhi	9", "TJ Congregation", ifelse(dat$Cluster == "Pharmaceutical Company in Nanjangud", "Pharma Co, Nanjangud", as.character(dat$Cluster))))))
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n()) #Variable for number of cases in each cluster
cases_per_cluster <- dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster) #Table for number of cases in each cluster
dat$origin <- ifelse(dat$n_cluster < 20, "Others", ifelse(dat$Cluster == "Influenza like illness", "ILI", ifelse(dat$Cluster == "Severe Acute Respiratory Infection", "SARI", ifelse(dat$Cluster == "TJ Congregation from 13th to 18th March in Delhi", "TJ Congregation", ifelse(dat$Cluster == "Pharmaceutical Company in Nanjangud", "Pharma Co, Nanjangud", as.character(dat$Cluster))))))
#Creating a cleaned up variable with information from `Clusters' for diagramming
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_color_hue() + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_hue() + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_viridis( + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_viridis() + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_viridis() + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_viridis(option = "D") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1)  + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins over time") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_brewer() + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_brewer(palette = "Spectral") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n()) #Variable for number of cases in each cluster
cases_per_cluster <- dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster) #Table for number of cases in each cluster
dat$origin <- ifelse(dat$n_cluster < 20, "Others (under 20 cases)", ifelse(dat$Cluster == "Influenza like illness", "ILI", ifelse(dat$Cluster == "Severe Acute Respiratory Infection", "SARI", ifelse(dat$Cluster == "TJ Congregation from 13th to 18th March in Delhi", "TJ Congregation", ifelse(dat$Cluster == "Pharmaceutical Company in Nanjangud", "Pharma Co, Nanjangud", as.character(dat$Cluster))))))
#Creating a cleaned up variable with information from `Clusters' for diagramming
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_brewer(palette = "Spectral") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n()) #Variable for number of cases in each cluster
cases_per_cluster <- dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster) #Table for number of cases in each cluster
dat$origin <- ifelse(dat$n_cluster < 20, "Under 20 cases", ifelse(dat$Cluster == "Influenza like illness", "ILI", ifelse(dat$Cluster == "Severe Acute Respiratory Infection", "SARI", ifelse(dat$Cluster == "TJ Congregation from 13th to 18th March in Delhi", "TJ Congregation", ifelse(dat$Cluster == "Pharmaceutical Company in Nanjangud", "Pharma Co, Nanjangud", as.character(dat$Cluster))))))
#Creating a cleaned up variable with information from `Clusters' for diagramming
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_brewer(palette = "RdYlBu") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_brewer(palette = "YlGnBu") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.5, color = "black", size = 0.1) + scale_fill_brewer(palette = "Blues") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 1.5, color = "black", size = 0.1)  + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
ggsave("clusters_stacked.png")
dat$origin <- ifelse(dat$Cluster == "From Gujarat", "Domestic Travel", ifelse(dat$Cluster == "From Rajasthan", "Domestic Travel", ifelse(dat$Cluster == "From the Southern States", "Domestic Travel", ifelse(dat$Cluster == "From Middle East", "International Travel",ifelse(dat$Cluster == "From United Kingdom", "International Travel",ifelse(dat$Cluster == "From the rest of Europe", "International Travel", ifelse(dat$Cluster == "From USA", "International Travel", ifelse(dat$Cluster == "From South America", "International Travel", as.character(dat$origin)))))))))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 1.5, color = "black", size = 0.1)  + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
dat$origin <- ifelse(dat$Cluster == "From Gujarat", "Domestic Travel", ifelse(dat$Cluster == "From Rajasthan", "Domestic Travel", ifelse(dat$Cluster == "From the Southern States", "Domestic Travel", ifelse(dat$Cluster == "From Middle East", "International Travel",ifelse(dat$Cluster == "From United Kingdom", "International Travel",ifelse(dat$Cluster == "From the rest of Europe", "International Travel", ifelse(dat$Cluster == "From USA", "International Travel", ifelse(dat$Cluster == "From South America", "International Travel",ifelse(dat$Cluster == "Second Generation Contact", "Other", as.character(dat$origin))))))))))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 1.5, color = "black", size = 0.1)  + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
dat$origin <- ifelse(dat$Cluster == "From Gujarat", "Domestic Travel", ifelse(dat$Cluster == "From Rajasthan", "Domestic Travel", ifelse(dat$Cluster == "From the Southern States", "Domestic Travel", ifelse(dat$Cluster == "From Middle East", "International Travel",ifelse(dat$Cluster == "From United Kingdom", "International Travel",ifelse(dat$Cluster == "From the rest of Europe", "International Travel", ifelse(dat$Cluster == "From USA", "International Travel", ifelse(dat$Cluster == "From South America", "International Travel",ifelse(dat$Cluster == "Second Generation Contact", "Others", as.character(dat$origin))))))))))
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 1.5, color = "black", size = 0.1)  + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 1.5, color = "black", size = 0.1)  + scale_fill_brewer(palette = "Dark2") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 1.5, color = "black", size = 0.1)  + scale_fill_brewer(palette = "Spectral") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.4, color = "black", size = 0.1)  + scale_fill_brewer(palette = "Spectral") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.8, color = "black", size = 0.1)  + scale_fill_brewer(palette = "Spectral") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
dat %>% filter(Date < "2020-06-01") %>% group_by("P") %>% summarize(secondary = n()) # number of secondary infections
dat %>% ungroup() %>% summarize(n = n()) # total cases
dat %>% filter(Date < "2020-06-01") %>% group_by("P") %>% summarize(secondary = n()) # number of secondary infections
dat %>% filter(Date < "2020-06-01") %>% ungroup() %>% summarize(n = n()) # total cases
dat %>% filter(Date < "2020-06-01") %>% group_by("P") %>% summarize(secondary = n()) # number of secondary infections
dat %>% filter(Date < "2020-06-01") %>% group_by(P) %>% summarize(secondary = n()) # number of secondary infections
x <- dat %>% filter(Date < "2020-06-01") %>% ungroup() %>% summarize(n = n()) # total cases
paste("Out of ", as.numeric(x), )
paste("Out of ", as.numeric(x))
p <- dat %>% filter(Date < "2020-06-01") %>% group_by(P) %>% summarize(secondary = n()) # number of secondary infections
paste("Out of", as.numeric(x), "cases confirmed by June 1", p$secondary[1], "had no contact history")
paste("Out of", as.numeric(x), "cases confirmed by June 1,", p$secondary[1], "(",100*p$secondary[1]/as.numeric(x),")", "had no contact history")
p <- dat %>% group_by(P) %>% summarize(secondary = n()) # number of secondary infections
x <- dat %>% ungroup() %>% summarize(n = n()) # total cases
paste("Out of", as.numeric(x), "cases confirmed by June 1,", p$secondary[1], "(",100*p$secondary[1]/as.numeric(x),")", "had no contact history")
p <- dat %>% filter(Date < "2020-07-01") %>% group_by(P) %>% summarize(secondary = n()) # number of secondary infections
x <- dat %>% filter(Date < "2020-07-01") %>% ungroup() %>% summarize(n = n()) # total cases
paste("Out of", as.numeric(x), "cases confirmed by June 1,", p$secondary[1], "(",100*p$secondary[1]/as.numeric(x),")", "had no contact history")
p <- dat %>% group_by(P) %>% summarize(secondary = n()) # number of secondary infections
x <- dat %>% ungroup() %>% summarize(n = n()) # total cases
p <- dat %>% filter(Date < "2020-05-01") %>% group_by(P) %>% summarize(secondary = n()) # number of secondary infections
x <- dat %>% filter(Date < "2020-05-01") %>% ungroup() %>% summarize(n = n()) # total cases
paste("Out of", as.numeric(x), "cases confirmed by June 1,", p$secondary[1], "(",100*p$secondary[1]/as.numeric(x),")", "had no contact history")
p <- dat %>% group_by(P) %>% summarize(secondary = n()) # number of secondary infections
x <- dat %>% ungroup() %>% summarize(n = n()) # total cases
View(july7_parent_p)
x <- july7_parent_p %>% filter(secondary > 10)
nrow(x)
paste(nrow(x), "cases caused 10 or more secondary infections")
View(x)
View(x)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
#july21_traced <- dat %>% filter(Cluster != "Unknown" | !is.na(Reason) | C != 0 | P != 0)
july21_traced <- dat %>% filter(Cluster != "Unknown")
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
## Number of daily cases
daily <- dat %>% group_by(Date) %>% summarize(Cases = n())
write_csv(daily, "daily_cases.csv")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n()) #Variable for number of cases in each cluster
cases_per_cluster <- dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster) #Table for number of cases in each cluster
dat$origin <- ifelse(dat$n_cluster < 20, "Under 20 cases", ifelse(dat$Cluster == "Influenza like illness", "ILI", ifelse(dat$Cluster == "Severe Acute Respiratory Infection", "SARI", ifelse(dat$Cluster == "TJ Congregation from 13th to 18th March in Delhi", "TJ Congregation", ifelse(dat$Cluster == "Pharmaceutical Company in Nanjangud", "Pharma Co, Nanjangud", as.character(dat$Cluster))))))
dat$origin <- ifelse(dat$Cluster == "From Gujarat", "Domestic Travel", ifelse(dat$Cluster == "From Rajasthan", "Domestic Travel", ifelse(dat$Cluster == "From the Southern States", "Domestic Travel", ifelse(dat$Cluster == "From Middle East", "International Travel",ifelse(dat$Cluster == "From United Kingdom", "International Travel",ifelse(dat$Cluster == "From the rest of Europe", "International Travel", ifelse(dat$Cluster == "From USA", "International Travel", ifelse(dat$Cluster == "From South America", "International Travel",ifelse(dat$Cluster == "Second Generation Contact", "Others", as.character(dat$origin))))))))))
#Creating a cleaned up variable with information from `Clusters' for diagramming
july7_parent_c <- dat %>% filter(Case <= 26815 & C == 1) # Collapsing C variable
nrow(july7_parent_c)
july7_parent_p <- dat %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P <= 26815 & P != 0) # Collapsing P variable
nrow(july7_parent_p)
setdiff(july7_parent_c$Case, july7_parent_p$P)
setdiff(july7_parent_p$P, july7_parent_c$Case)
temp <- dat %>% ungroup() %>% select(Case, Date)
names(temp) <- c("P", "Date confirmed")
parents <- dat %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P != 0)
secondary <- left_join(parents, temp)
write_csv(secondary, "secondary_infections.csv")
paste(nrow(july7_parent_p), "cases diagnosed and contact traced till July 7 caused secondary infections by July 21, 2020")
sum(july7_parent_p$secondary)
#july21_traced <- dat %>% filter(Cluster != "Unknown" | !is.na(Reason) | C != 0 | P != 0)
july21_traced <- dat %>% filter(Cluster != "Unknown")
paste(nrow(july21_traced), "out of", nrow(dat), "cases were contact traced till July 21")
temp <- july21_traced %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P <= 26815 & P != 0) # Collapsing P variable
nrow(temp) #seems right
july7_traced <- july21_traced %>% filter(Case <= 26815) # Number of cases confirmed and traced by July 7
nrow(july7_traced)-nrow(july7_parent_p) # Number of cases confirmed and traced by July 7 that did not cause other infections
nrow(july7_traced)
july7_traced <- july21_traced %>% filter(Case <= 26815) # Number of cases confirmed and traced by July 7
nrow(july7_traced)
nrow(july7_traced)-nrow(july7_parent_p) # Number of cases confirmed and traced by July 7 that did not cause other infections
sum(temp$secondary)
july7_traced <- july21_traced %>% filter(Case <= 26815) # Number of cases confirmed and traced by July 7
nrow(july7_traced)
nrow(july7_traced)-nrow(july7_parent_p) # Number of cases confirmed and traced by July 7 that did not cause other infections
mean_infections <- as.numeric(july7_parent_p %>% summarise(mean = mean(secondary)))
july7_parent_p %>% summarize(avg = mean(secondary), med = median(secondary))
july7_parent_p %>% ggplot(aes(secondary)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("No. of COVID-19 patients that cause a secondary infection") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
View(july7_parent_p)
View(dat)
ind <- dat %>% filter(Cluster == "Unknown") %>% range(-P, -Case)
ind <- dat %>% filter(Cluster == "Unknown") %>% arrange(-P, -Case)
View(ind)
july7_parent_c <- dat %>% filter(Case <= 26815 & C == 1) # Collapsing C variable
nrow(july7_parent_c)
july7_parent_p <- dat %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P <= 26815 & P != 0 & Cluster != "Unknown") # Collapsing P variable
nrow(july7_parent_p)
july7_parent_c <- dat %>% filter(Case <= 26815 & C == 1) # Collapsing C variable
nrow(july7_parent_c)
july7_parent_p <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P <= 26815 & P != 0 ) # Collapsing P variable
nrow(july7_parent_p)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggraph)
library(igraph)
library(ggrepel)
setwd("~/Documents/GitHub/tracing")
dat <- read_csv("KAtrace.csv",  skip = 19)
dat$Date <- as.Date(dat$Date, "%d-%b")
## Number of daily cases
daily <- dat %>% group_by(Date) %>% summarize(Cases = n())
write_csv(daily, "daily_cases.csv")
dat <- dat %>% group_by(Cluster) %>% mutate(n_cluster = n()) #Variable for number of cases in each cluster
cases_per_cluster <- dat %>% group_by(Cluster) %>% summarize(n_cluster = n()) %>% arrange(-n_cluster) #Table for number of cases in each cluster
dat$origin <- ifelse(dat$n_cluster < 20, "Under 20 cases", ifelse(dat$Cluster == "Influenza like illness", "ILI", ifelse(dat$Cluster == "Severe Acute Respiratory Infection", "SARI", ifelse(dat$Cluster == "TJ Congregation from 13th to 18th March in Delhi", "TJ Congregation", ifelse(dat$Cluster == "Pharmaceutical Company in Nanjangud", "Pharma Co, Nanjangud", as.character(dat$Cluster))))))
dat$origin <- ifelse(dat$Cluster == "From Gujarat", "Domestic Travel", ifelse(dat$Cluster == "From Rajasthan", "Domestic Travel", ifelse(dat$Cluster == "From the Southern States", "Domestic Travel", ifelse(dat$Cluster == "From Middle East", "International Travel",ifelse(dat$Cluster == "From United Kingdom", "International Travel",ifelse(dat$Cluster == "From the rest of Europe", "International Travel", ifelse(dat$Cluster == "From USA", "International Travel", ifelse(dat$Cluster == "From South America", "International Travel",ifelse(dat$Cluster == "Second Generation Contact", "Others", as.character(dat$origin))))))))))
#Creating a cleaned up variable with information from `Clusters' for diagramming
july7_parent_c <- dat %>% filter(Case <= 26815 & C == 1) # Collapsing C variable
nrow(july7_parent_c)
july7_parent_p <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P <= 26815 & P != 0 ) # Collapsing P variable
nrow(july7_parent_p)
setdiff(july7_parent_c$Case, july7_parent_p$P)
setdiff(july7_parent_p$P, july7_parent_c$Case)
temp <- dat %>% ungroup() %>% select(Case, Date)
names(temp) <- c("P", "Date confirmed")
parents <- dat %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P != 0)
secondary <- left_join(parents, temp)
write_csv(secondary, "secondary_infections.csv")
paste(nrow(july7_parent_p), "cases diagnosed and contact traced till July 7 caused secondary infections by July 21, 2020")
sum(july7_parent_p$secondary)
#july21_traced <- dat %>% filter(Cluster != "Unknown" | !is.na(Reason) | C != 0 | P != 0)
july21_traced <- dat %>% filter(Cluster != "Unknown")
paste(nrow(july21_traced), "out of", nrow(dat), "cases were contact traced till July 21")
temp <- july21_traced %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P <= 26815 & P != 0) # Collapsing P variable
nrow(temp) #seems right
sum(temp$secondary)
july7_traced <- july21_traced %>% filter(Case <= 26815) # Number of cases confirmed and traced by July 7
nrow(july7_traced)
nrow(july7_traced)-nrow(july7_parent_p) # Number of cases confirmed and traced by July 7 that did not cause other infections
paste("Of the", nrow(july7_traced), "cases that were confirmed by July 7 and contact traced", nrow(july7_parent_p), "caused secondary infections, while", nrow(july7_traced)-nrow(july7_parent_p), "did not cause any secondary infections at all")
mean_infections <- as.numeric(july7_parent_p %>% summarise(mean = mean(secondary)))
july7_parent_p %>% summarize(avg = mean(secondary), med = median(secondary))
july7_parent_p %>% ggplot(aes(secondary)) + geom_histogram() + geom_vline(aes(xintercept = mean_infections, color = "Mean"), linetype="dashed") + theme_classic() + xlab("Number of infections caused by each patient") + ylab("No. of COVID-19 patients that cause a secondary infection") + ggtitle("Distribution of number of  infections caused")
ggsave("secondary_hist.png")
x <- july7_parent_p %>% filter(secondary > 10)
paste(nrow(x), "cases caused 10 or more secondary infections")
p <- dat %>% filter(Date < "2020-05-01") %>% group_by(P) %>% summarize(secondary = n()) # number of secondary infections
x <- dat %>% filter(Date < "2020-05-01") %>% ungroup() %>% summarize(n = n()) # total cases
paste("Out of", as.numeric(x), "cases confirmed by June 1,", p$secondary[1], "(",100*p$secondary[1]/as.numeric(x),")", "had no contact history")
p <- dat %>% group_by(P) %>% summarize(secondary = n()) # number of secondary infections
x <- dat %>% ungroup() %>% summarize(n = n()) # total cases
paste("Out of", as.numeric(x), "cases confirmed by June 1,", p$secondary[1], "(",100*p$secondary[1]/as.numeric(x),")", "had no contact history")
unknown_p <- dat %>% filter(!is.na(P))
unknown_p$known_p <- ifelse(unknown_p$P == 0, 0, 1)
unknown_p <- unknown_p %>% ungroup() %>% mutate(knowns = cumsum(known_p)) %>% select(Case, Date, knowns)
unknown_p <- unknown_p %>% group_by(Date) %>% filter(row_number()==n()) %>% filter(!is.na(Date))
unknown_p$known_parent <- 100*unknown_p$knowns/unknown_p$Case
ggplot(unknown_p, aes(x = Date, y = known_parent)) + geom_line() + theme_minimal() + ggtitle("Percentage of total cases with known parents has been declining") + ylab("% of cases with known parent case")
dat %>% filter(Cluster != "29-June Trace History Absent" & Cluster != "28-June Trace History Absent" & Cluster != "27-June Trace History Absent" & Cluster != "Second Generation Contact Absent" & Cluster != "Domestic Travel History Absent" & Cluster != "International Travel History Absent") %>% ggplot(aes(Date)) + geom_bar(position = "fill", aes(fill=origin), alpha = 0.8, color = "black", size = 0.1)  + scale_fill_brewer(palette = "Spectral") + theme_classic() + theme(legend.position="bottom", legend.spacing = unit(0.4, "points"), legend.text = element_text(size = 6))  + ggtitle("Distribution of case origins in Karnataka, March 9 - July 21, 2020") + ylab("Proportion of cases confirmed daily")
ggsave("clusters_stacked.png")
july7_parent_c <- dat %>% filter(Cluster != "Unknown") %>% filter(Case <= 26815 & C == 1) # Collapsing C variable
nrow(july7_parent_c)
july7_parent_p <- dat %>% filter(Cluster != "Unknown") %>% group_by(P) %>% summarize(secondary = n()) %>% filter(P <= 26815 & P != 0 ) # Collapsing P variable
nrow(july7_parent_p)
setdiff(july7_parent_c$Case, july7_parent_p$P)
setdiff(july7_parent_p$P, july7_parent_c$Case)
sum(july7_parent_p$secondary)
unknown_p <- dat %>% filter(!is.na(P))
unknown_p$known_p <- ifelse(unknown_p$P == 0, 0, 1)
unknown_p <- unknown_p %>% ungroup() %>% mutate(knowns = cumsum(known_p)) %>% select(Case, Date, knowns)
unknown_p <- unknown_p %>% group_by(Date) %>% filter(row_number()==n()) %>% filter(!is.na(Date))
unknown_p$known_parent <- 100*unknown_p$knowns/unknown_p$Case
ggplot(unknown_p, aes(x = Date, y = known_parent)) + geom_line() + theme_minimal() + ggtitle("Percentage of total cases with known infecting contact has been declining") + ylab("% of cases with known infecting contact")
View(unknown_p)
unknown_p <- dat %>% filter(!is.na(P))
unknown_p$known_p <- ifelse(unknown_p$P == 0, 0, 1)
unknown_p <- unknown_p %>% ungroup() %>% mutate(knowns = cumsum(known_p)) %>% select(Case, Date, knowns)
unknown_p <- unknown_p %>% filter(Date > "2020-03-10") %>% group_by(Date) %>% filter(row_number()==n()) %>% filter(!is.na(Date))
unknown_p$known_parent <- 100*unknown_p$knowns/unknown_p$Case
ggplot(unknown_p, aes(x = Date, y = known_parent)) + geom_line() + theme_minimal() + ggtitle("Percentage of total cases with known infecting contact has been declining") + ylab("% of cases with known infecting contact")
save
unknown_p <- dat %>% filter(!is.na(P))
unknown_p$known_p <- ifelse(unknown_p$P == 0, 0, 1)
unknown_p <- unknown_p %>% ungroup() %>% mutate(knowns = cumsum(known_p)) %>% select(Case, Date, knowns)
unknown_p <- unknown_p %>% filter(Date > "2020-03-10") %>% group_by(Date) %>% filter(row_number()==n()) %>% filter(!is.na(Date))
unknown_p$known_parent <- 100*unknown_p$knowns/unknown_p$Case
ggplot(unknown_p, aes(x = Date, y = known_parent)) + geom_line() + theme_minimal() + ggtitle("Percentage of total cases with known infecting contact has been declining") + ylab("% of cases with known infecting contact")
ggsave("known_transmitter.png")
